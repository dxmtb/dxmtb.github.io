---
author: admin
comments: true
date: 2011-03-21 23:32:58+00:00
layout: post
slug: tdec
title: USACO MAR11 Tree Decoration
wordpress_id: 344
categories:
- 解题报告
tags:
- USACO
- 解题报告
- 贪心
---

从下到上处理每个子树（拓扑序，dfs倒序即可），能不装饰就不装饰，否则选的前子树中最便宜的装饰。贪心。

    
    
    /*
    ID: dxmtb
    PROG: USACO MAR11 Tree Decoration
    TIME: 2011.03.20
    STATE: Solved
    MEMO: 贪心
    */
    #include <cstdio>
    
    typedef long long s64;
    
    const s64 MAXN=100005;
    
    struct Node
    {
    	s64 v;
    	Node *next;
    	Node(s64 _v,Node *_next):
    		v(_v),next(_next){}
    }*adj[MAXN];
    
    inline void addedge(s64 u,s64 v)
    {
    	adj[u]=new Node(v,adj[u]);
    }
    
    s64 N;
    s64 T[MAXN],C[MAXN];
    s64 mincost[MAXN];
    s64 cost[MAXN],placed[MAXN];
    void greed(s64 u)
    {
    	if (adj[u]==NULL)
    	{
    		cost[u]=T[u]*C[u];
    		placed[u]=C[u];
    		return ;
    	}
    	for(Node *p=adj[u];p;p=p->next)
    		greed(p->v);
    	for(Node *p=adj[u];p;p=p->next)
    	{
    		placed[u]+=placed[p->v];
    		cost[u]+=cost[p->v];
    		if (mincost[p->v]<mincost[u])
    			mincost[u]=mincost[p->v];
    	}
    	if (placed[u]<C[u])
    	{
    		cost[u]+=mincost[u]*(C[u]-placed[u]);
    		placed[u]=C[u];
    	}
    }
    
    int main()
    {
    	freopen("tdec.in","r",stdin);
    	freopen("tdec.out","w",stdout);
    	scanf("%lld",&N;);
    	for(int i=1;i<=N;i++)
    	{
    		s64 P;
    		scanf("%lld%lld%lld",&P;,C+i,T+i);
    		if (P!=-1)
    			addedge(P,i);
    		mincost[i]=T[i];
    	}
    	greed(1);
    	printf("%lld\n",cost[1]);
    	return 0;
    }
    
