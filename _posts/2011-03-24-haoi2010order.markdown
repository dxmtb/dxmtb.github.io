---
author: admin
comments: true
date: 2011-03-24 13:35:32+00:00
layout: post
slug: haoi2010order
title: HAOI2010 订货
wordpress_id: 376
categories:
- 解题报告
tags:
- haoi
- 网络流
- 解题报告
---

每一个月变成一个节点，源点向每个月连一条费用是购买费，容量无穷的边，每个月向汇点连一条容量是需求，费用为0的边，每个月向下一个月连一条费用是储存费，容量无穷的边。

    
    
    /*
    ID: dxmtb
    PROG: HAOI2010 订货
    TIME: 2011.03.18
    STATE: Solved
    MEMO: 网络流
    */
    #include <cstdio>
    #include <cstring>
    #include <deque>
    using namespace std;
    
    const int MAXN=100;
    const int oo=0x7fffffff;
    
    struct Node
    {
    	int v,c,w;
    	Node *back,*next;
    	Node(int _v,int _c,int _w,Node *_next,Node *_back=NULL):
    		v(_v),c(_c),w(_w),back(_back),next(_next){}
    	Node(){}
    }*adj[MAXN],pool[MAXN*10],*mem=pool;
    
    inline void addedge(int u,int v,int c,int w)
    {
    	adj[u]=new Node(v,c,w,adj[u]);
    	adj[v]=new Node(u,0,-w,adj[v],adj[u]);
    	adj[u]->back=adj[v];
    }
    
    int S,T;
    int mincost;
    int piS;
    
    int dis[MAXN];
    bool label()
    {
    	deque<int> q;
    	for(int i=S;i<=T;i++)
    		dis[i]=oo;
    	dis[S]=0;
    	q.push_back(S);
    	while(q.size())
    	{
    		int u=q.front();q.pop_front();
    		int dt;
    		for(Node *p=adj[u];p;p=p->next)
    			if (p->c && (dt=dis[u]+p->w)<dis[p->v])
    			{
    				dis[p->v]=dt;
    				if (q.empty() || dt<dis[q.front()])
    					q.push_back(p->v);
    				else q.push_front(p->v);
    			}
    	}
    	for(int i=S;i<=T;i++)
    		for(Node *p=adj[i];p;p=p->next)
    			p->w+=dis[i]-dis[p->v];
    	piS+=dis[T];
    	return (dis[T]!=oo);
    }
    
    bool vis[MAXN];
    int maxflow;
    int augment(int u,int m)
    {
    	if (u==T) return maxflow+=m,mincost+=m*piS,m;
    	vis[u]=true;
    	int l=m;
    	for(Node *p=adj[u];p;p=p->next)
    		if (p->c && !p->w && !vis[p->v])
    		{
    			int t=augment(p->v,min(p->c,l));
    			l-=t;
    			p->c-=t;
    			p->back->c+=t;
    			if (l==0)
    				return m;
    		}
    	return m-l;
    }
    
    void solve()
    {
    	while(label())
    	do memset(vis,false,sizeof(vis));
    	while(augment(S,oo));
    }
    
    int N;
    int main()
    {
    	freopen("order.in","r",stdin);
    	freopen("order.out","w",stdout);
    	int m,s;
    	scanf("%d%d%d",&N;,&m;,&s;);
    	S=0,T=N+1;
    	for(int i=1;i<=N;i++)
    	{
    		int U;
    		scanf("%d",&U;);
    		addedge(i,T,U,0);
    	}
    	for(int i=1;i<=N;i++)
    	{
    		int d;
    		scanf("%d",&d;);
    		addedge(S,i,oo,d);
    	}
    	for(int i=1;i<N;i++)
    		addedge(i,i+1,s,m);
    	solve();
    	printf("%d\n",mincost);
    	return 0;
    }
    
