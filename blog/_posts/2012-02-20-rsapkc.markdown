---
author: admin
comments: true
date: 2012-02-20 19:34:01+00:00
layout: post
slug: rsapkc
title: RSA公钥加密系统
wordpress_id: 492
categories:
- 共同分享
tags:
- https
- rsa
- ssl
- 黑客
---

为了研究黑客技术，今天看了《算法导论》的RSA的部分，给大家简单介绍下。

RSA加密系统是加密两个人之间的通信的一种方法。

我们假设这个通信是一个数字，显然大多数通信都能转化成数字。而我们的通信是用户向网站发送密码。

主要工作是网站这边的：



	
  1. 随机找到两个大素数p和q（p不等于q）。令n=p*q,m=(p-1)*(q-1)。

	
  2. 找到一个与m互质的小奇数e。

	
  3. 求出一个值d使得ed≡1(mod m)。由数论可知因为e与m互质，所以d唯一。

	
  4. 我们把数对(d,n)自己留着，把数对(e,n)留个公布给用户。我们把前者叫私钥，后者叫密钥。


这样网站的工作就完成了！

用户传输密码p时就传输t=p^e mod n，而网站解密的时候只要计算t^d就可以得到p了。

简单证明下：

	
  1. 设p不等于0（等于则显然成立）

	
  2. (p^e)^d≡p^(ed)≡p^(1+k*m)≡p*p^(k*m)≡p*((p^(p-1))^(k*(q-1)) (mod m)

	
  3. 由费马小定理知道p^(p-1)≡1 (mod m)

	
  4. p*((p^(p-1))^(k*(q-1))≡p (mod m)

	
  5. 即最后我们又得到了未加密的数p


这还可以应用到数字签名。也就是说你能知道“网站”传达给你的东西是不是真的是它传达的。

具体就是网站在它传达的信息后面附上它的名字，设这个串是p，然后给用户t=p^d mod n。用户只要看t^e mod n末尾有没有签名即可。这样可以防止中间人冒充你的网站。

注意到如果中间人在网站向用户传递公钥的时候只要修改成自己的公钥然后再用自己的密钥解密就可以盗窃用户的密码，所以网站再传递(e,n)的时候也要进行加密。这就似乎递归了。实际中我们用一个值得信赖的证书颁发机构，它有一个大家都知道的公钥，只要证书机构给我们的网站发个证明“兹证明dxmtb的公钥是(e,n)”然后用它的密钥加密下就行了。把这个加密的密钥传给用户用户就可以用颁发机构的公钥解密了。这样既不怕颁发机构给我们发证书的时候被修改（因为你可以解密看公钥是不是你的公钥），也不怕在传达给用户的时候被中间人修改（要想修改要知道颁发机构的密钥）。当然了，如果颁发机构不值得信赖而你的电脑却相信了它……

那么如何攻破RSA系统呢？当然，只有知道密钥额 我们才能解密或者冒充签名。因为作为用户的话我们只能知道公钥(e,n)。要求d的话我们只要知道m就好办了：这样就可以在log(m)的时间用扩展欧几里得算法求出d了。要想知道m只要能把n因式分解就行了。但看似n只有两个因数，其实是难以分解的。就用平时所知道的根号N的算法对于现在RSA的2048位（二进制）甚至1024位加密是完全不可行的。事实上，更好的算法如果不是针对的话跑起来也是相当困难。

最后再说一下随机两个大素数的问题。根据素数定理我们可以知道在1~N中随机选一个数是素数的概率大概是1/ln(n)，所以我们在n只有2的几百到几千次方的时候也只不过用随机几百个几千个数而已。验证这些数是否是素数也有一个很好的算法：之前介绍过的蒙特卡洛算法:Miller-Rabbin算法，大概是O(klogn)级别的。对于将要使用很长时间的密钥、公钥来说，生成他们只需要很短的时间，最多也就几分钟而已。这样的算法显然是可以接受的。
