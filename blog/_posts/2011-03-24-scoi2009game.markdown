---
author: admin
comments: true
date: 2011-03-24 12:32:30+00:00
layout: post
slug: scoi2009game
title: SCOI2009 游戏
wordpress_id: 356
categories:
- 解题报告
tags:
- SCOI
- 解题报告
---

可知是求N分解成若干数，最小公倍数有不同的多少个。如果两个分解出的数不互质，那么同除以公约数，把公约数单独列出来，其它部分用1填充，最小公倍数一样的。如果一个数不是一个质数的几次方，而是多个质数的乘积，分开以后，用1填充，同样是一样的。所以我们只要求不同质数的次方相加不大于N的方案数就可以了，可以不重不漏。

    
    
    /*
    ID: dxmtb
    PROG: [SCOI2009]游戏 
    TIME: 2011.03.23
    STATE: Solved
    MEMO: 数学方法
    */
    #include <cstdio>
    #include <iostream>
    using namespace std;
    
    const int MAXN=1005;
    
    bool flag[MAXN];
    int prime[MAXN],tot;
    int N;
    void init()
    {
    	for(int i=2;i<=N;i++)
    		flag[i]=true;
    	for(int i=2;i<=N;i++)
    	{
    		if (flag[i])
    			prime[++tot]=i;
    		for(int j=i;j<=N;j+=i)
    			flag[j]=false;
    	}
    }
    
    long long d[MAXN][MAXN];
    int main()
    {
    //	freopen("1025.in","r",stdin);
    	scanf("%d",&N;);
    	init();
    	d[0][0]=1;
    	for(int i=1;i<=tot;i++)
    		for(int j=0;j<=N;j++)
    		{
    			d[i][j]=d[i-1][j];
    			for(int k=prime[i];k<=j;k*=prime[i])
    				d[i][j]+=d[i-1][j-k];
    		}
    	long long re=0;
    	for(int j=0;j<=N;j++)
    		re+=d[tot][j];
    	cout<<re<<endl;
    	return 0;
    }
    
